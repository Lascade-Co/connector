name: Unified Manual Backfill

on:
  workflow_dispatch:
    inputs:
      pipeline:
        description: "Pipeline to backfill"
        type: choice
        required: true
        options:
          - facebook
          - google_analytics
          - google
          - google_play
      groups:
        description: "Groups to backfill (comma-separated, e.g., 'd1,m4,d2' or single like 'd1')"
        type: string
        required: true
        default: "d1"
      days:
        description: "Days to backfill (e.g., 120)"
        type: string
        required: true

jobs:
  # Parse groups and determine execution strategy
  prepare:
    runs-on: ubuntu-latest
    outputs:
      groups_array: ${{ steps.parse.outputs.groups_array }}
      is_single: ${{ steps.parse.outputs.is_single }}
    steps:
      - name: Parse groups input
        id: parse
        run: |
          # Remove spaces and split by comma
          GROUPS="${{ inputs.groups }}"
          GROUPS_CLEAN=$(echo "$GROUPS" | tr -d ' ')
          
          # Convert to JSON array format
          IFS=',' read -ra GROUP_ARRAY <<< "$GROUPS_CLEAN"
          GROUPS_JSON=$(printf '%s\n' "${GROUP_ARRAY[@]}" | jq -R . | jq -s -c .)
          
          echo "groups_array=$GROUPS_JSON" >> $GITHUB_OUTPUT
          
          # Check if single group
          if [ ${#GROUP_ARRAY[@]} -eq 1 ]; then
            echo "is_single=true" >> $GITHUB_OUTPUT
          else
            echo "is_single=false" >> $GITHUB_OUTPUT
          fi

  # Single group backfill (when only one group provided)
  backfill_single:
    needs: prepare
    if: ${{ needs.prepare.outputs.is_single == 'true' }}
    uses: ./.github/workflows/_reusable-etl.yml
    with:
      pipeline: ${{ inputs.pipeline }}
      group: ${{ inputs.groups }}
      backfill_days: ${{ inputs.days }}
      pipeline_name_suffix: _backfill_${{ inputs.groups }}_${{ github.run_id }}
    secrets: inherit

  # Multiple groups backfill in parallel (when multiple groups provided)
  backfill_matrix:
    needs: prepare
    if: ${{ needs.prepare.outputs.is_single == 'false' }}
    strategy:
      matrix:
        group: ${{ fromJSON(needs.prepare.outputs.groups_array) }}
      fail-fast: false
    uses: ./.github/workflows/_reusable-etl.yml
    with:
      pipeline: ${{ inputs.pipeline }}
      group: ${{ matrix.group }}
      backfill_days: ${{ inputs.days }}
      pipeline_name_suffix: _backfill_${{ matrix.group }}_${{ github.run_id }}
    secrets: inherit
